version: 2.1

node-key: &node_key
  key: node-deps-{{ checksum ".circleci/config.yml" }}-{{ checksum "package-lock.json" }}

circle-key: &circle_key
  key: deploy-{{ checksum ".circleci/config.yml" }}

env-param: &env_param
    env:
      type: enum
      default: "demo"
      enum: ["demo", "prod"]

filter_all: &filter_all
  filters:
    branches:
      only: /.*/
    tags:
      only: /.*/

filter_demo: &filter_demo
  filters:
    branches:
      only: main
    tags:
      only: demo

filter_prod: &filter_prod
  filters:
    branches:
      ignore: /.*/
    tags:
      only: /^v[0-9]+\.[0-9]+\.[0-9]+/
  
workflows:
  # There's only one workflow here because circle doesn't
  # allow filtering at the workflow level. The filters ensure
  # that deploy steps are only run under approprate conditions
  test-and-deploy:
    jobs:
      - build-static:
          <<: *filter_all
      - test-nginx:
          <<: *filter_all
      - test-static:
          <<: *filter_all
          requires:
            - build-static
      - deploy-static:
          name: Deploy static files to demo
          <<: *filter_demo
          requires: 
            - test-static
            - test-nginx
      - deploy-static:
          name: Deploy static files to prod
          env: prod
          <<: *filter_prod
          requires:
            - test-static
            - test-nginx
      - deploy-nuxt:
          name: Deploy nuxt to demo
          tag: demo
          <<: *filter_demo
          requires:
            - test-static
            - test-nginx
      - deploy-nuxt:
          name: Deploy nuxt to prod
          env: prod
          <<: *filter_prod
          requires:
            - test-static
            - test-nginx
            
jobs:
  build-static:
    executor: default
    steps:
      - checkout
      - restore_cache:
          <<: *node_key
      - run:
          name: Install Node dependencies
          command:  |
            if [ ! -d node_modules ]; then
              npm ci
            fi
      - save_cache:
          <<: *node_key
          paths:
            - node_modules

  test-static:
    executor: default
    steps:
      - checkout
      - restore_cache:
          <<: *node_key
      - run:
          name: Run tests with JUnit as reporter
          command: node ./node_modules/jest/bin/jest.js --ci --runInBand --reporters=default --reporters=jest-junit
          environment:
            JEST_JUNIT_OUTPUT_DIR: ./reports/junit/
      - store_test_results:
          path: $JEST_JUNIT_OUTPUT_DIR
      - store_artifacts:
          path: $JEST_JUNIT_OUTPUT_DIR

  test-nginx:
    docker:
      - image: nginx
    steps:
      - checkout
      - run:
          name: Validate the nginx config
          environment:
            ENV: "DEMO"
          command: |
            apt-get update && \
            apt-get install -y nginx-extras
            cp ./nginx/* /etc/nginx/
            nginx -t
      - store_artifacts:
          path: /var/log/nginx
      
  deploy-static:
    docker: 
      - image: cimg/node:14.18
    parameters:
      <<: *env_param
    steps:
      - checkout
      - restore_cache:
          <<: *node_key
      - run:
          name: Deploy to S3
          environment:
            ENV: <<parameters.env>>
          command: |
            env | sed -n "s/^${ENV^^}_//p" >> .env
            set -o allexport && source .env && set +o allexport
            npm ci
            npm run deploy

  deploy-nuxt:
    docker:
      - image: circleci/python:3.6
    parameters: 
      <<: *env_param
      tag:
        type: string
        default: ""
    steps:
      - checkout
      - setup_remote_docker:
          version: 19.03.13
      - restore_cache:
          <<: *circle_key
      - run:
          name: Install Requirements
          command: |
            if [[ ! -d ~/.venv ]]; then
              python3 -m venv ~/.venv
              source ~/.venv/bin/activate
              pip3 install -U git+https://github.com/nypublicradio/nyprsetuptools.git
            fi
      - run:
          name: Deploy Nuxt
          environment:
            ENV: <<parameters.env>>
            TAG: <<parameters.tag>>
          command: |
            TAG=${TAG:-$CIRCLE_TAG}
            source ~/.venv/bin/activate
            nyprsetuptools DockerDeploy \
              --fargate \
              --cpu=1024 \
              --memory-reservation=2048 \
              --ecr-repository=gothamist-vue \
              --ecs-cluster=fastboot \
              --execution-role=gothamist-vue-$ENV \
              --task-role=gothamist-vue-$ENV \
              --ports=80 \
              --environment=$ENV \
              --tag=$TAG \
              --wait=300
      - save_cache:
          <<: *circle_key
          paths: 
            - ~/.venv

executors:
  default:
    docker:
      - image: cimg/node:14.18
    resource_class: large
    environment:
      JOBS: 2  
